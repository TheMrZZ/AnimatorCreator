(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{381:function(t,n,e){var content=e(478);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,e(44).default)("36873827",content,!0,{sourceMap:!1})},413:function(t,n){},415:function(t,n){},447:function(t,n,e){var map={"./animation/end.mcfunction":448,"./animation/every_tick.mcfunction":449,"./animation/new_frame.mcfunction":450,"./animation/start.mcfunction":451,"./creation/after.mcfunction":452,"./creation/before.mcfunction":453,"./creation/every_tick.mcfunction":454,"./creation/first_tick.mcfunction":455,"./creation/last_tick.mcfunction":456,"./creation_/after.mcfunction":457,"./creation_/before.mcfunction":458,"./creation_/every_tick.mcfunction":459,"./creation_/first_tick.mcfunction":460,"./creation_/last_tick.mcfunction":461,"./get_information.mcfunction":462,"./help.mcfunction":463,"./init.mcfunction":464};function o(t){var n=r(t);return e(n)}function r(t){if(!e.o(map,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return map[t]}o.keys=function(){return Object.keys(map)},o.resolve=r,t.exports=o,o.id=447},448:function(t,n,e){"use strict";e.r(n),n.default="## Called at the start of an animation\n#\n# @target @s An armor_stand holding information. This entity is used to retrieve informations about the current animation frame.\n#\n# @param @e[tag=can_be_animated,tag=current] The real animated entity. This entity is the one that needs to be animated.\n# @param @s ArmorItems[0].tag.Current[0] The current animation frame\n"},449:function(t,n,e){"use strict";e.r(n),n.default="## Called every tick during an animation\n#\n# @target @s An armor_stand holding information. This entity is used to retrieve informations about the current animation frame.\n#\n# @param @e[tag=can_be_animated,tag=current] The real animated entity. This entity is the one that needs to be animated.\n# @param @s ArmorItems[0].tag.Current[0] The current animation frame\n"},450:function(t,n,e){"use strict";e.r(n),n.default="## Called each time there is a new animation frame.\n## This does NOT mean there is interesting data for this animator.\n## You need to take that into account.\n#\n# @target @s An armor_stand holding information. This entity is used to retrieve informations about the current animation frame.\n#\n# @param @e[tag=can_be_animated,tag=current] The real animated entity. This entity is the one that needs to be animated.\n# @param @s ArmorItems[0].tag.Current[0] The current animation frame\n"},451:function(t,n,e){"use strict";e.r(n),n.default="## Called at the start of an animation\n#\n# @target @s An armor_stand holding information. This entity is used to retrieve informations about the current animation frame.\n#\n# @param @e[tag=can_be_animated,tag=current] The real animated entity. This entity is the one that needs to be animated.\n# @param @s ArmorItems[0].tag.Current[0] The current animation frame\n"},452:function(t,n,e){"use strict";e.r(n),n.default='## Called just after the animation recording ends.\n#\n# Used to make external changes. This changes can be related to the Animation, but should not modify it.\n#\n## /!\\ This must NOT change the Anim tag. This is strictly forbidden. Animation MUST NOT be changed by any "after" function.\n## If you really want to change the Animation, use the function {datapackName}:creation/last_tick.\n## Therefore, you are assured that other animators (and yours) will work correctly.\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n# @param (READ ONLY) ArmorItems[0].tag.Anim: the recorded animation, in the animation data holder\n'},453:function(t,n,e){"use strict";e.r(n),n.default='## Called just before the animation recording starts.\n#\n# Used to make external changes. This changes can be related to the Animation, but should not modify it.\n#\n## /!\\ This must NOT change the Anim tag. This is strictly forbidden. Animation MUST NOT be changed by any "before" function.\n## If you really want to change the Animation, use the function {datapackName}:creation/first_tick.\n## Therefore, you are assured that other animators (and yours) will work correctly.\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n# @param (READ ONLY) ArmorItems[0].tag.Anim: the recorded animation, in the animation data holder\n'},454:function(t,n,e){"use strict";e.r(n),n.default='## Called each tick by the player creating an animation\n#\n# @target The player creating the animation\n#\n# @param @s time: the number of ticks elapsed since beginning of the animation creation\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[-1]: a NBT tag on the animation data holder, storing the current animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no animation needs to be added\n'},455:function(t,n,e){"use strict";e.r(n),n.default='## Called on the first tick of path creation\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[0]: a NBT tag on the animation data holder, storing initial state of the animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no initial state needs to be set.\n'},456:function(t,n,e){"use strict";e.r(n),n.default='## Called at the last tick of the Animation creation\n#\n# @target The player creating the animation\n#\n# @param @s time: the total number of ticks taken by the animation\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[-1]: a NBT tag on the animation data holder, storing the current animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no animation needs to be added\n'},457:function(t,n,e){"use strict";e.r(n),n.default='## Called just after the animation recording ends.\n#\n# Used to make external changes. This changes can be related to the Animation, but should not modify it.\n#\n## /!\\ This must NOT change the Anim tag. This is strictly forbidden. Animation MUST NOT be changed by any "after" function.\n## If you really want to change the Animation, use the function {datapackName}:creation/last_tick.\n## Therefore, you are assured that other animators (and yours) will work correctly.\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n# @param (READ ONLY) ArmorItems[0].tag.Anim: the recorded animation, in the animation data holder\n\n# This function only purpose is to call {datapackName}:creation/after if the {animatorName} was selected\nexecute if entity @s[tag={animatorTag}] run function {datapackName}:creation/after\n'},458:function(t,n,e){"use strict";e.r(n),n.default='## Called just before the animation recording starts.\n#\n# Used to make external changes. This changes can be related to the Animation, but should not modify it.\n#\n## /!\\ This must NOT change the Anim tag. This is strictly forbidden. Animation MUST NOT be changed by any "before" function.\n## If you really want to change the Animation, use the function {datapackName}:creation/first_tick.\n## Therefore, you are assured that other animators (and yours) will work correctly.\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n# @param (READ ONLY) ArmorItems[0].tag.Anim: the recorded animation, in the animation data holder\n\n# This function only purpose is to call {datapackName}:creation/before if the {animatorName} was selected\nexecute if entity @s[tag={animatorTag}] run function {datapackName}:creation/before\n'},459:function(t,n,e){"use strict";e.r(n),n.default='## Called each tick by the player creating a path\n#\n# @target The player creating the animation\n#\n# @param @s time: the number of ticks elapsed since beginning of the animation creation\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[-1]: a NBT tag on the animation data holder, storing the current animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no animation needs to be added\n\n\n# This function only purpose is to call {datapackName}:creation/every_tick if the {animatorName} was selected\nexecute if entity @s[tag={animatorTag}] run function {datapackName}:creation/every_tick\n'},460:function(t,n,e){"use strict";e.r(n),n.default='## Called on the first tick of path creation\n#\n# @target The player creating the animation\n#\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[0]: a NBT tag on the animation data holder, storing initial state of the animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no initial state needs to be set.\n\n# This function only purpose is to call {datapackName}:creation/first_tick if the {animatorName} was selected\nexecute if entity @s[tag={animatorTag}] run function {datapackName}:creation/first_tick\n'},461:function(t,n,e){"use strict";e.r(n),n.default='## Called at the last tick of the Animation creation\n#\n# @target The player creating the animation\n#\n# @param @s time: the total number of ticks taken by the animation\n# @param @e[name=anim_data,tag=current]: the animation data holder\n#\n# @returns ArmorItems[0].tag.Anim[-1]: a NBT tag on the animation data holder, storing the current animation.\n#                                      a "modified" tag will be added to the entity, so the system knows an animation was added.\n# @returns Nothing if no animation needs to be added\n\n\n# This function only purpose is to call {datapackName}:creation/last_tick if the {animatorName} was selected\nexecute if entity @s[tag={animatorTag}] run function {datapackName}:creation/last_tick\n'},462:function(t,n,e){"use strict";e.r(n),n.default='## Store the animator\'s information inside the entity\n## Will be called multiple times.\n#\n# Infos are:\n# - Animator\'s Name {String} - Used to display the name of the animator\n# - Animator\'s Tag {String} - Later, if the entity doesn\'t have this tag, it means the player does not want to use this animator\n# - Animator\'s Author {String} [optional] - Used to display the name of the author\n# - Animator\'s AuthorUrl {String} [optional] - Used to provide access to the author\'s website\n# - Animator\'s Help {JSON} [optional] - Used to display help about the animator\n#\n# @target the entity which will store those informations\n\n######### INFORMATION SECTION #########\n# This section stores information about the Animator itself\ndata modify entity @s ArmorItems[0].tag.Info append value {Name:"{animatorName}"}\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {Tag:"{animatorTag}"}\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {Author:"TheMrZZ"}\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {AuthorUrl:"reddit.com/u/TheMrZZ0"}\n\n######### HELP SECTION #########\n# This section determines which function must be called to display help about the animator.\n# /!\\ Do not touch anything except the function name. Else it won\'t work.\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {Help:\'{"clickEvent":{"value":"/function {datapackName}:help","action":"run_command"},"text":""}\'}\n\n\n######### TAG SECTION #########\n# /!\\ You have to change two times the name of the tag, once in each command\n\n# Message displayed when the animator is not selected\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {NotSelected:\'{"clickEvent":{"value":"/tag @s add {animatorTag}","action":"run_command"}, "text":""}\'}\n\n# Message displayed when the animator is selected\ndata modify entity @s ArmorItems[0].tag.Info[-1] merge value {Selected:\'{"clickEvent":{"value":"/tag @s remove {animatorTag}","action":"run_command"}, "text":""}\'}\n'},463:function(t,n,e){"use strict";e.r(n),n.default='## Called by a player needing help on the animator\n#\n# @target a Player\n\ntellraw @s [{"text":"============ [{animatorName}] ============", "color": "gray"}]\ntellraw @s [{"text":""}]\ntellraw @s [{"text":"=========================================", "color": "gray"}]\n'},464:function(t,n,e){"use strict";e.r(n),n.default="## This functions is called on world loading, and when the /reload command is issued\n"},465:function(t,n,e){var map={"./tags/functions/animators/animation/end.json":466,"./tags/functions/animators/animation/every_tick.json":467,"./tags/functions/animators/animation/new_frame.json":468,"./tags/functions/animators/animation/start.json":469,"./tags/functions/animators/creation/after.json":470,"./tags/functions/animators/creation/before.json":471,"./tags/functions/animators/creation/every_tick.json":472,"./tags/functions/animators/creation/first_tick.json":473,"./tags/functions/animators/creation/last_tick.json":474,"./tags/functions/animators/get_information.json":475,"./tags/functions/animators/init.json":476};function o(t){var n=r(t);return e(n)}function r(t){if(!e.o(map,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return map[t]}o.keys=function(){return Object.keys(map)},o.resolve=r,t.exports=o,o.id=465},466:function(t){t.exports={values:["{datapackName}:animation/end"]}},467:function(t){t.exports={values:["{datapackName}:animation/every_tick"]}},468:function(t){t.exports={values:["{datapackName}:animation/new_frame"]}},469:function(t){t.exports={values:["{datapackName}:animation/start"]}},470:function(t){t.exports={values:["{datapackName}:creation_/after"]}},471:function(t){t.exports={values:["{datapackName}:creation_/before"]}},472:function(t){t.exports={values:["{datapackName}:creation_/every_tick"]}},473:function(t){t.exports={values:["{datapackName}:creation_/first_tick"]}},474:function(t){t.exports={values:["{datapackName}:creation_/last_tick"]}},475:function(t){t.exports={values:["{datapackName}:get_information"]}},476:function(t){t.exports={value:["{datapackName}:init"]}},477:function(t,n,e){"use strict";var o=e(381);e.n(o).a},478:function(t,n,e){(t.exports=e(43)(!1)).push([t.i,".container{min-height:100vh;display:flex;flex-flow:column nowrap;justify-content:center;align-items:center;text-align:center;width:-webkit-min-content;width:-moz-min-content;width:min-content}.container *{width:100%}.title{text-transform:capitalize;border-bottom:3px solid rgba(0,0,0,.1);white-space:nowrap}.inputs{display:grid;grid-template-columns:auto -webkit-max-content;grid-template-columns:auto max-content;grid-column-gap:50px}.submit{margin-top:20px}.label{white-space:nowrap;text-align:left;grid-column:1}.input{grid-column:2}",""])},479:function(t,n,e){"use strict";e.r(n);e(180),e(181),e(73),e(103),e(104),e(42),e(72);var o=e(175),r=e(406),m=e(407),c=e(128),d=e(408),l=e.n(d),h=e(446),f=e(447),y=e(465),k=function(){function t(n,e,o){Object(r.a)(this,t),Object(c.a)(this,"datapackName",void 0),Object(c.a)(this,"animatorName",void 0),Object(c.a)(this,"animatorTag",void 0),this.datapackName=n,this.animatorName=e,this.animatorTag=o}return Object(m.a)(t,[{key:"download",value:function(){for(var t=new l.a,n=[this.datapackName,this.animatorName,this.animatorTag],e=n[0],r=n[1],m=n[2],c="data/"+"".concat(e,"/functions/"),d=0,k=[["data/minecraft/",y,function(t){return JSON.stringify(t,null,2)}],[c,f,function(t){return t.default}]];d<k.length;d++){var T=Object(o.a)(k[d],3),w=T[0],N=T[1],_=T[2],A=!0,v=!1,x=void 0;try{for(var I,C=N.keys()[Symbol.iterator]();!(A=(I=C.next()).done);A=!0){var path=I.value,text=_(N(path));console.log(text),text=text.replace(/{datapackName}/g,e).replace(/{animatorName}/g,r).replace(/{animatorTag}/g,m),path=w+path.substring(2),t.file(path,text,{})}}catch(t){v=!0,x=t}finally{try{A||null==C.return||C.return()}finally{if(v)throw x}}}t.file("pack.mcmeta",JSON.stringify({pack:{pack_format:1,description:"".concat(r," for the Animation Creator datapack.")}},null,2)),t.generateAsync({type:"blob"}).then(function(content){return Object(h.saveAs)(content,r)})}}]),t}(),T={data:function(){return{fieldsValues:{},fields:[["name","Name","Animator's name","The name of the animator","[A-Za-z_0-9 ]+"],["author","Author","Author's name","Your name",".*"],["authorURL","Author's Website","Author's website","Your website",".*"]]}},computed:{name:function(){var t=this.fieldsValues.name;return t?t.toLowerCase():""}},methods:{onSubmit:function(t){var form=this.$refs.form;t.preventDefault(),form.checkValidity(),this.downloadDatapack()},downloadDatapack:function(){new k(this.datapackName(),this.animatorName(),this.animatorTag()).download()},animatorName:function(){return(this.name+" animator").toLowerCase().split(" ").map(function(s){return s.charAt(0).toUpperCase()+s.substring(1)}).join(" ")},animatorTag:function(){return this.animatorName().replace(/ /g,"_").replace(/[^A-Za-z_]/g,"").toLowerCase()},datapackName:function(){return this.animatorTag()}}},w=(e(477),e(40)),component=Object(w.a)(T,function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("section",{staticClass:"container"},[e("header",[e("h1",{staticClass:"title"},[t._v(t._s(t.name)+" Animator")])]),t._v(" "),e("b-form",{ref:"form",staticClass:"form",on:{submit:t.onSubmit}},[e("div",{staticClass:"inputs"},[t._l(t.fields,function(n){var o=n[0],label=n[1],r=n[2],title=n[3],pattern=n[4];return[e("label",{key:"label-"+o,staticClass:"label",attrs:{for:o}},[t._v(t._s(label)+":")]),t._v(" "),e("b-form-input",{key:"input-"+o,staticClass:"input",attrs:{id:o,placeholder:r,pattern:pattern,title:title},model:{value:t.fieldsValues[o],callback:function(n){t.$set(t.fieldsValues,o,n)},expression:"fieldsValues[id]"}})]})],2),t._v(" "),e("b-button",{staticClass:"submit btn-success",attrs:{type:"submit"}},[t._v("Create the Animator !")])],1)],1)},[],!1,null,null,null);n.default=component.exports}}]);